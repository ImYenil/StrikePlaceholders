import org.apache.tools.ant.filters.ReplaceTokens
import java.nio.file.Files
import java.nio.file.StandardCopyOption

plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

group = 'StrikePlaceholders'
version = '1.0'


repositories {
    mavenLocal()
    mavenCentral()
    maven { url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url = 'https://repo.codemc.io/repository/maven-public/' }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    compileOnly 'org.spigotmc:spigot:1.18.2-R0.1-SNAPSHOT'
    compileOnly 'me.clip:placeholderapi:2.11.1'
    compileOnly files('lib/StrikePractice-dev-61831490317.jar')
}

task moveJar() {
    doLast {
        File original = new File(buildDir, "libs" + File.separator + "StrikePlaceholders-${rootProject.version}.jar")
        File newLoc = new File(rootProject.buildDir, "libs" + File.separator + "StrikePlaceholders-${rootProject.version}.jar")
        newLoc.createNewFile()
        Files.move(original.toPath(), newLoc.toPath(), StandardCopyOption.REPLACE_EXISTING)
    }
}

tasks.shadowJar.finalizedBy(moveJar)

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        duplicatesStrategy DuplicatesStrategy.INCLUDE
        include '**/*.yml'
        filter(ReplaceTokens, tokens: [version: project.version])
    }
}